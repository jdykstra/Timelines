//	DataObj.java - Abstract base class for Timelines data objects.//	??	Since the number of categories in a document will typically be rather small, there's a good//	??	chance that many states will have the same iCategories value.  The current design uses a//	??	separate Set object for each one, but we could save some memory by sharing them.//	??	This would require a mechanism to manage the shared Set values.import java.io.Serializable;import java.util.*;abstract class DataObj extends TimePeriod  implements Serializable {	//	Constants.	//	Special value for timestamps that indicates they are unknown.	public final static long UNKNOWN_TIMESTAMP = 0;			//	Instance Variables.	protected LabelInfo iLabelInfo;			//	Various label information	protected DefinedCategorySet.MemberSet iCategories;	//	Categories we're a member of	protected long iCreateTimestamp;			//	Time of object creation (millis)	protected long iModifyTimestamp;			//	Time of last modification to object (millis)			//	Constructor used by TLState when reading from a Mac stream.  Our fields are	//	explicitly set after the object is created.	protected DataObj(){		iCreateTimestamp = UNKNOWN_TIMESTAMP;		iModifyTimestamp = UNKNOWN_TIMESTAMP;	}			//	Constructor for building from constituent parts.	protected DataObj(LabelInfo li, DefinedCategorySet.MemberSet categories){		iLabelInfo = li;		iCategories = categories;		iCreateTimestamp = UNKNOWN_TIMESTAMP;		iModifyTimestamp = UNKNOWN_TIMESTAMP;	}			//	Set value of this object from another DataObj.	//	Note that, although the DataObj stays the same, its constituent parts change.  	public void setAllFrom(DataObj other){		iLabelInfo = new LabelInfo(other.iLabelInfo);		iCategories = other.iCategories;	}	//	Accessors.	protected void setLabelInfo(LabelInfo li)					{ iLabelInfo = li;}	protected LabelInfo getLabelInfo()							{ return iLabelInfo; }	protected long getCreateTime()							{ return iCreateTimestamp; }	protected long getModifyTime()							{ return iModifyTimestamp; }	protected DefinedCategorySet.MemberSet getCategories()		{ return iCategories; }	protected void setCategories(DefinedCategorySet.MemberSet c)	{ iCategories = c; }	protected void setCreateTime(long t)						{ iCreateTimestamp = t;}	protected void setModifyTime(long t)						{ iModifyTimestamp = t;}		//	Override of TimePeriod.equals().	//	Restore the default semantics where two objects equal each other iff they are the same object.	public boolean equals(Object other){		//	??	Could we use "return Object.equals(other);"?		return (this == other);	}	}